{"pageProps":{"event":{"name":"CustomerRegistered","version":"0.0.1","summary":"holds information about new Customer Registration details.\n","domain":null,"producerNames":["eRes service"],"consumerNames":["Data hub","RMS"],"owners":["todonnell","nkelsall"],"externalLinks":[],"badges":[],"tags":[],"producers":[{"name":"eRes service"}],"consumers":[{"name":"Data hub"},{"name":"RMS"}],"openAPISpec":"---\nopenapi: 3.0.0\ninfo:\n  title: Customer Registration\n  description: \"## easyJet EICC OpenAPI 3 default schema standard for defining standard RESTful Event Definitions based schema definitions ![diagram](https://media.publit.io/file/ej-integration-logo.png) ##\\n---\\n### easyJet captures and masters its Event definitions in the [easyJet SwaggerHub Repository](https://app.swaggerhub.com/organizations/easyJet)<p>\\nSwaggerHub is the single master for all Event definitions and is used to populate other schema repositories or validators including Konf and other eJ supported frameworks and tooling <p>\\n**Each new proposed API is required to be approved by the [IAGB](https://easyjet.atlassian.net/wiki/spaces/APIm/pages/43384849/IAGB) board before being accepted into production.**\\nContact: Tony O'Donnell EICC TA or the EICC team -: (tony.odonnell@easyjet.com, eisupport@easyjet.com). <p>\\nPlease see the EICC Integration Confluence pages for further guidance and assistance.<p>\\n--- \\nEvent Catalogue Example Entry - use to capture details for the easyJet Event Catalogue system maintained by EICC\\n---\\nname: CustomerRegistered\\nversion: 0.0.1\\nsummary: |\\nHolds information about what the user removed from their cart.\\nproducers:\\n    - Customer Service\\nconsumers:\\n    - Data Hub\\n    - RMS\\nowners:\\n - todonnell\\n - nkelsall\\n---\\n\\n<Admonition>When firing this event make sure you set the `correlation-id` in the headers. Our schemas have standard metadata make sure you read and follow it.</Admonition>\\n\\n### SwaggerHub Link:\\nhttps://app.swaggerhub.com/apis/easyJet/CustomerRegistered/1.0.0\\n\\n### Details\\n\\nThis event can be triggered multiple times per customer. Everytime the customer adds an item to their shopping cart this event will be triggered.\\n\\nWe have a frontend application that allows users to buy things from our store. This front end interacts directly with the `Basket Service` to add items to the cart. The `Basket Service` will raise the events.\\n\\n\\n<NodeGraph title=\\\"Consumer / Producer Diagram\\\" />\\n\\n<EventExamples title=\\\"How to trigger event\\\" />\\n\\n---\\n\\n## OpenAPI Schema\\n\\nOpenAPI schema for the event can be found below.\\n\\n<OpenAPI />\\n\\n\\n __Standard Event Header & Detail Fields:__\\n ---\\n\\n   | Fields               | Header  |  Detail  |  Mandatory | Notes                  |\\n   |----------------------|---------|----------| -----------| -----------------------|\\n   |\\\"version\\\":            |   Y     |          |      Y     | System                 |\\n   |\\\"id\\\":                 |   Y     |          |      Y     | System                 |\\n   |\\\"detail-type\\\":        |   Y     |          |     Y/O    | System/App overridden  |\\n   |\\\"source\\\":             |   Y     |          |     Y/O    | System/App overridden  |          \\n   |\\\"account\\\":            |   Y     |          |      Y     | System                 |        \\n   |\\\"time\\\":               |   Y     |          |      Y     | System                 |\\n   |\\\"region\\\":             |   Y     |          |      Y     | System                 |\\n   |\\\"detail\\\":             |         |          |      Y     |    -                   |\\n   |  \\\"metadata\\\"          |         |     Y   |       Y     |    -                   |\\n   |   \\\"service\\\"          |         |     Y    |      Y     | e.g. FlightDisruption  |\\n   |   \\\"provider\\\"         |         |     Y    |      Y     | e.g. TOPS, AIMS        |\\n   |   \\\"life_cycle_status\\\"|         |     Y    |      Y     | Published\\n   |   \\\"message_version\\\"  |         |     Y    |      Y     | e.g. 1.0               |\\n   |   \\\"domain\\\"           |         |     Y    |      Y     | e.g. CUST, AOPS, COMM  |    \\n   |   \\\"subdomain\\\"        |         |     Y    |      Y     | e.g. Marketing, Sales  |   \\n   |   \\\"event_type\\\"       |         |     Y    |      Y     | e.g  Command or Event  |   \\n   |   \\\"message_id\\\"       |         |     N    |      N     | e.g EVT_TOP_001        |    \\n   |   \\\"correlation_id\\\"   |         |     N    |      N     | grouping identifier    |    \\n   |   \\\"idempotency_id\\\"   |         |     N    |      N     | valid unique identifier| \\n   |   \\\"group_id\\\"         |         |     N    |      N     | valid group identifier |      \\n   |   \\\"tenant_id\\\"        |         |     N    |      N     | SaaS/Parter Identifier |\\n   |   \\\"finop_tag\\\"        |         |     N    |      N     | Cost Code Tag          |    \\n   |   \\\"priority\\\"         |         |     N    |      N     | QoS (1-5) [High-Low)   |       \\n   |   \\\"process_status\\\"   |         |     N    |      N     | (success/error/retry) |\\n   |   \\\"data_sec_class:\\\"  |         |     Y    |      Y     | Data Classification    | \\n   |      \\\"data\\\":                   |          |      -     | payload specfic        |\\n   |        \\\"amount\\\": \\\"19.99\\\"       |          |      -     |     \\\" \\\"                |\\n   |        \\\"quantity\\\": \\\"2\\\",        |          |      -     |     \\\" \\\"                |\\n   |        \\\"orderId\\\": \\\"0d07\\\"\\\",     |          |      -     |     \\\" \\\"                |\\n\"\n  termsOfService: https://www.some-ej-TOS.org.uk/terms\n  contact:\n    name: EICC Service Desk\n    email: tony.odonnell@easyjet.com\n  license:\n    name: open-licence\n    url: https://www.openapi.org.uk/open-licence\n  version: 1.0.0\nservers:\n- url: /\npaths: {}\ncomponents:\n  schemas:\n    AWSEventHeader:\n      type: object\n      properties:\n        version:\n          type: string\n        id:\n          type: string\n        detail-type:\n          type: string\n        source:\n          type: string\n        account:\n          type: string\n        resources:\n          type: string\n        time:\n          type: string\n        region:\n          type: string\n        detail:\n          type: string\n    easyJetEventHeader:\n      type: object\n      properties:\n        service:\n          type: string\n          description: MANDATORY associated Business Service e.g. Flight Disruption\n        provider:\n          type: string\n          description: MANDATORY e.g. TOPS\n        life_cycle_status:\n          type: string\n          description: MANDATORY In-Design | In-Test | Published | Deprecated | Retired\n        message-version:\n          type: string\n          description: MANDATORY e.g. 1.0.1\n        domain:\n          type: string\n          description: MANDATORY e.g. AOPS\n        subdomain:\n          type: string\n          description: MANDATORY e.g. Scheduling and Crew Rostering\n        event_type:\n          type: string\n          description: MANDATORY  Command | Event\n        messsage_id:\n          type: string\n          description: OPTIONAL e.g. MSG_TOPS_FOPS1234\n        correlation_id:\n          type: string\n          description: OPTIONAL e.g. d135d5f1-3dd0-45fa-8f26-55d8d6a44876\n        idempotency_id:\n          type: string\n          description: OPTIONAL e.g. AGJ6FJMkGQIpHUTX\n        group_id:\n          type: string\n          description: OPTIONAL e.g. 323\n        tenant_id:\n          type: string\n          description: OPTIONAL e.g. SalesForce\n        finop_tag:\n          type: string\n          description: OPTIONAL e.g. ECBP01425\n        priority:\n          type: string\n          description: OPTIONAL e.g. 1|2|3|4|5\n        process_status:\n          type: string\n          description: OPTIONAL e.g. SUCCESS | RETRY | ERROR\n        data_sec-class:\n          type: string\n          description: OPTIONAL e.g. PUBLIC | INTERNAL | CONFIDENTIAL | HIGHLY-CONFIDENTIAL\n    CustomerRegistered:\n      type: object\n      properties:\n        membership_id:\n          type: string\n          description: An 8 dight membership identifer\n        added_date:\n          type: string\n          description: Date Membership added\n        first_name:\n          type: string\n        last_name:\n          type: string\n        title:\n          type: string\n        email:\n          type: string\n        dob:\n          type: string\n        company:\n          type: string\n        address:\n          type: string\n        address2:\n          type: string\n        address3:\n          type: string\n        city:\n          type: string\n        postcode:\n          type: string\n        telephone:\n          type: string\n        mobile_telephone:\n          type: string\n        app_status:\n          type: string\n        country_name:\n          type: string\n        language:\n          type: string\n        strCurrency:\n          type: string\n        expiry_month:\n          type: string\n        expiry_year:\n          type: string\n        autorenew:\n          type: string\n        card_amount:\n          type: string\n        voucher_code:\n          type: string\n        timedate:\n          type: string\n        card_number:\n          type: string\n        membership_type:\n          type: string\n        membership_purchased_count:\n          type: string\n        event_type:\n          type: string\n","historicVersions":[],"schema":null,"examples":[{"name":"example.js","snippet":"var kafka = require('kafka-node'),\n  Consumer = kafka.Consumer,\n  client = new kafka.KafkaClient(),\n  consumer = new Consumer(\n    client,\n    [\n      { topic: 't', partition: 0 },\n      { topic: 'AddedItemToCart', partition: 1 },\n    ],\n    {\n      autoCommit: false,\n    }\n  );\n\nconsumer.on('message', function (message) {\n  console.log(message);\n});\n","langugage":"javascript"}]},"eventPath":"/events/CustomerRegistered","breadCrumbs":[{"name":"Events","href":"/events","current":false},{"name":"CustomerRegistered","href":"/events/CustomerRegistered","current":true}],"markdown":{"content":"\n<Admonition>When firing this event make sure you set the `correlation-id` in the headers. Our schemas have standard metadata make sure you read and follow it.</Admonition>\n\n### SwaggerHub Link:\nhttps://app.swaggerhub.com/apis/easyJet/CustomerRegistered/1.0.0\n\n### Details\n\nThis event can be triggered multiple times per customer. Everytime the customer adds an item to their shopping cart this event will be triggered.\n\nWe have a frontend application that allows users to buy things from our store. This front end interacts directly with the `Basket Service` to add items to the cart. The `Basket Service` will raise the events.\n\n\n<NodeGraph title=\"Consumer / Producer Diagram\" />\n\n<EventExamples title=\"How to trigger event\" />\n\n## OpenAPI Schema\n\nOpenAPI schema for the event can be found below.\n\n<OpenAPI />\n","source":{"compiledSource":"var m=Object.defineProperty,c=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,t,o)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,a=(e,t)=>{for(var o in t||(t={}))i.call(t,o)&&p(e,o,t[o]);if(r)for(var o of r(t))s.call(t,o)&&p(e,o,t[o]);return e},d=(e,t)=>c(e,l(t));var h=(e,t)=>{var o={};for(var n in e)i.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&r)for(var n of r(e))t.indexOf(n)<0&&s.call(e,n)&&(o[n]=e[n]);return o};const makeShortcode=e=>function(o){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},o))},Admonition=makeShortcode(\"Admonition\"),NodeGraph=makeShortcode(\"NodeGraph\"),EventExamples=makeShortcode(\"EventExamples\"),OpenAPI=makeShortcode(\"OpenAPI\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:e}=n,t=h(n,[\"components\"]);return mdx(MDXLayout,d(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(Admonition,{mdxType:\"Admonition\"},\"When firing this event make sure you set the `correlation-id` in the headers. Our schemas have standard metadata make sure you read and follow it.\"),mdx(\"h3\",null,\"SwaggerHub Link:\"),mdx(\"p\",null,mdx(\"a\",a({parentName:\"p\"},{href:\"https://app.swaggerhub.com/apis/easyJet/CustomerRegistered/1.0.0\"}),\"https://app.swaggerhub.com/apis/easyJet/CustomerRegistered/1.0.0\")),mdx(\"h3\",null,\"Details\"),mdx(\"p\",null,\"This event can be triggered multiple times per customer. Everytime the customer adds an item to their shopping cart this event will be triggered.\"),mdx(\"p\",null,\"We have a frontend application that allows users to buy things from our store. This front end interacts directly with the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Basket Service\"),\" to add items to the cart. The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Basket Service\"),\" will raise the events.\"),mdx(NodeGraph,{title:\"Consumer / Producer Diagram\",mdxType:\"NodeGraph\"}),mdx(EventExamples,{title:\"How to trigger event\",mdxType:\"EventExamples\"}),mdx(\"h2\",null,\"OpenAPI Schema\"),mdx(\"p\",null,\"OpenAPI schema for the event can be found below.\"),mdx(OpenAPI,{mdxType:\"OpenAPI\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"lastModifiedDate":"2024/5/20"},"loadedVersion":"latest"},"__N_SSG":true}