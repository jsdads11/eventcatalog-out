{"pageProps":{"changes":[],"event":{"name":"LoyaltyMembershipUpdated","version":"0.0.1","summary":"Tells us when a Loyalty user has signed up or a change of state has occurred\n","domain":null,"producerNames":["Zuora Loyalty User Service"],"consumerNames":["ej Data Platform","eRes eCommerce Service"],"owners":["todonnell","rshanmugam"],"externalLinks":[],"badges":[],"tags":[],"producers":[{"name":"Zuora Loyalty User Service"}],"consumers":[{"name":"ej Data Platform"},{"name":"eRes eCommerce Service"}],"openAPISpec":null,"historicVersions":[],"schema":{"snippet":"{\n  \"$id\": \"https://example.com/AddedItemToCart.json\",\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"title\": \"AddedItemToCart\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"metadata\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"correlationId\": {\n          \"type\": \"string\",\n          \"description\": \"The ID of the user\"\n        },\n        \"domain\": {\n          \"type\": \"string\",\n          \"description\": \"The domain of the event\"\n        },\n        \"service\": {\n          \"type\": \"string\",\n          \"description\": \"The name of the service that triggered the event\"\n        }\n      },\n      \"required\": [\"correlationId\", \"domain\"]\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"userId\": {\n          \"type\": \"string\",\n          \"description\": \"The ID of the user\"\n        },\n        \"itemId\": {\n          \"type\": \"string\",\n          \"description\": \"The ID of the shopping item\"\n        },\n        \"quantity\": {\n          \"type\": \"number\",\n          \"description\": \"How many items the user wants to add to their shopping cart\",\n          \"minimum\": 1,\n          \"maximum\": 1000,\n          \"default\": 1\n        }\n      }\n    }\n  }\n}\n","language":"json","extension":"json"},"examples":[{"name":"example.js","snippet":"var kafka = require('kafka-node'),\n  Consumer = kafka.Consumer,\n  client = new kafka.KafkaClient(),\n  consumer = new Consumer(\n    client,\n    [\n      { topic: 't', partition: 0 },\n      { topic: 'LoyaltyMembershipUpdated', partition: 1 },\n    ],\n    {\n      autoCommit: false,\n    }\n  );\n\nconsumer.on('message', function (message) {\n  console.log(message);\n});\n","langugage":"javascript"}]},"breadCrumbs":[{"name":"Events","href":"/events","current":false},{"name":"LoyaltyMembershipUpdated","href":"/events/LoyaltyMembershipUpdated","current":false},{"name":"Logs","href":"/events/LoyaltyMembershipUpdated/history","current":true}]},"__N_SSG":true}